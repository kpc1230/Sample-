<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>com.atlassian.bonfire</groupId>
        <artifactId>atlassian-bonfire</artifactId>
        <version>2.1000.0-SNAPSHOT</version>
    </parent>

    <artifactId>atlassian-bonfire-plugin</artifactId>

    <name>Capture for JIRA</name>
    <description>This is the Capture for JIRA plugin.</description>
    <packaging>atlassian-plugin</packaging>

    <properties>
        <Spring-Context>*;timeout:=60</Spring-Context>
        <jira.functest.maxMemory>1512M</jira.functest.maxMemory>
        <jira.functest.minMemory>512M</jira.functest.minMemory>
        <jira.functest.maxPermSize>384M</jira.functest.maxPermSize>
        <atlassian.upm.on.demand>false</atlassian.upm.on.demand> <!-- upm licensing differs in On Demand environments -->
        <!-- This Beehive version must be no newer than the version provided by JIRA, see ClusterLockServiceFactory -->
        <beehive.version>1.0.1</beehive.version>

        <od.testing.configuration>
            use-java,8
            include-artifact,com.atlassian.bonfire:jira-capture-od-acceptance-tests
        </od.testing.configuration>
        <work.context.version>1.2.1</work.context.version>

        <datasource.jndi>jdbc/JiraDS</datasource.jndi>
        <postgres.dbname>jira</postgres.dbname>
        <postgres.user>jira</postgres.user>
        <postgres.password>jira</postgres.password>
        <database.driver.version.postgres>9.2-1004-jdbc4</database.driver.version.postgres>
    </properties>

    <build>
        <plugins>
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven.compiler.plugin.version}</version>
                <configuration>
                    <source>${jdkLevel}</source>
                    <target>${jdkLevel}</target>
                    <encoding>UTF-8</encoding>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.groovy.maven</groupId>
                <artifactId>gmaven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>buildnumber-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>com.atlassian.maven.plugins</groupId>
                <artifactId>maven-jira-plugin</artifactId>
                <version>${amps.version}</version>
                <configuration>
                    <enableFastdev>false</enableFastdev>
                    <instructions>
                        <Import-Package>
                            org.codehaus.jackson*,
                            com.atlassian.jira,
                            com.atlassian.analytics.api.annotations;resolution:="optional",
                            com.atlassian.upm.*,
                            com.atlassian.workcontext.*;resolution:="optional",
                            *;resolution:=optional
                        </Import-Package>
                    </instructions>
                    <systemPropertyVariables>
                        <atlassian.upm.on.demand>${atlassian.upm.on.demand}</atlassian.upm.on.demand>
                    </systemPropertyVariables>
                    <extractDependencies>true</extractDependencies>
                    <skipTests>true</skipTests>

                    <!-- args passed to cargo -->
                    <jvmArgs>-server -Dmail.mime.decodeparameters=true
                        -Dorg.apache.jasper.runtime.BodyContentImpl.LIMIT_BUFFER=true
                        -Xmx${jira.functest.maxMemory} -Xms${jira.functest.minMemory}
                        -XX:MaxPermSize=${jira.functest.maxPermSize} -XX:+HeapDumpOnOutOfMemoryError
                        -Djira.plugins.bundled.disable=false -Djira.jelly.on=true -Dfile.encoding=utf-8
                        -Djira.dump=true -Djira.websudo.is.disabled=true
                        -Dstudio.webdav.directory=${project.build.directory}
                    </jvmArgs>

                    <libArtifacts>
                        <libArtifact>
                            <groupId>org.postgresql</groupId>
                            <artifactId>postgresql</artifactId>
                            <version>${database.driver.version.postgres}</version>
                        </libArtifact>
                    </libArtifacts>
                    <products>
                        <product>
                            <id>jira</id>
                            <instanceId>jira</instanceId>
                            <version>${jira.version}</version>
                            <dataVersion>${jira.data.version}</dataVersion>
                            <dataSources>
                                <dataSource>
                                    <jndi>${datasource.jndi}</jndi>
                                    <url>jdbc:postgresql://localhost:${postgres.port}/jira</url>
                                    <driver>org.postgresql.Driver</driver>
                                    <username>${postgres.user}</username>
                                    <password>${postgres.password}</password>
                                    <schema>public</schema>
                                    <defaultDatabase>jdbc:postgresql://localhost:${postgres.port}/postgres
                                    </defaultDatabase>
                                    <systemUsername>postgres</systemUsername>
                                    <systemPassword>postgres</systemPassword>
                                    <importMethod>Sql</importMethod>
                                    <type>postgres84</type>
                                </dataSource>
                            </dataSources>
                            <pluginArtifacts>
                                <pluginArtifact>
                                    <groupId>com.atlassian.jira</groupId>
                                    <artifactId>jira-func-test-plugin</artifactId>
                                    <version>${jira.version}</version>
                                </pluginArtifact>
                                <pluginArtifact>
                                    <groupId>com.atlassian.jira.tests</groupId>
                                    <artifactId>jira-testkit-plugin</artifactId>
                                    <version>${testkit.version}</version>
                                </pluginArtifact>
                            </pluginArtifacts>
                        </product>
                    </products>
                </configuration>
            </plugin>
            <plugin>
                <groupId>com.google.code.maven-replacer-plugin</groupId>
                <artifactId>maven-replacer-plugin</artifactId>
                <version>1.3.8</version>
                <executions>
                    <execution>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>replace</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <file>src/main/resources/build/build.properties.template</file>
                    <outputFile>src/main/resources/build/build.properties</outputFile>
                    <replacements>
                        <replacement>
                            <token>@@build.time@@</token>
                            <value>${maven.build.timestamp}</value>
                        </replacement>
                        <replacement>
                            <token>@@build.version@@</token>
                            <value>${build.version}</value>
                        </replacement>
                        <replacement>
                            <token>@@project.version@@</token>
                            <value>${project.version}</value>
                        </replacement>
                        <replacement>
                            <token>@@build.number@@</token>
                            <!-- comes from plugin buildnumber-maven-plugin -->
                            <value>${changeSet}</value>
                        </replacement>
                        <replacement>
                            <token>@@extension.version.directory@@</token>
                            <value>${extension.version.directory}</value>
                        </replacement>
                    </replacements>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <excludes>
                        <exclude>it/**</exclude>
                    </excludes>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <dependencies>

        <dependency>
            <groupId>com.atlassian.labs</groupId>
            <artifactId>atlassian-json</artifactId>
            <version>0.3</version>
        </dependency>

        <!-- User compatibility library to handle renamed users -->
        <dependency>
            <groupId>com.atlassian.usercompatibility</groupId>
            <artifactId>usercompatibility-jira</artifactId>
            <version>0.13</version>
        </dependency>

        <!-- Licensing deps -->
        <dependency>
            <groupId>com.atlassian.upm</groupId>
            <artifactId>licensing-api</artifactId>
            <version>${upm.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.atlassian.upm</groupId>
            <artifactId>upm-api</artifactId>
            <version>${upm.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.atlassian.upm</groupId>
            <artifactId>licensing-lib</artifactId>
            <version>${upm.version}</version>
            <scope>provided</scope>
        </dependency>

        <!-- Although JIRA uses xstream, it does not OSGi export it, so we include it explcitly in our JAR -->
        <dependency><!-- xstream used in excalibur -->
            <groupId>xstream</groupId>
            <artifactId>xstream</artifactId>
            <version>1.1.1</version>
        </dependency>
        <dependency><!-- xpp3 used for xstream -->
            <groupId>xpp3</groupId>
            <artifactId>xpp3</artifactId>
            <version>1.1.4c</version>
        </dependency>

        <!--Not sure about this one - JIRA has it and it seems OSGi exported but I could get it to run without direct scope-->
        <dependency>
            <groupId>com.atlassian.extras</groupId>
            <artifactId>atlassian-extras</artifactId>
            <version>2.7</version>
        </dependency>

        <!-- Analytics annotations -->
        <dependency>
            <groupId>com.atlassian.analytics</groupId>
            <artifactId>analytics-api</artifactId>
        </dependency>

        <dependency>
            <groupId>com.atlassian.jira</groupId>
            <artifactId>jira-api</artifactId>
        </dependency>
        <dependency>
            <groupId>com.atlassian.jira</groupId>
            <artifactId>jira-core</artifactId>
        </dependency>
        <dependency>
            <groupId>com.atlassian.jira</groupId>
            <artifactId>jira-rest-plugin</artifactId>
        </dependency>
        <dependency>
            <groupId>com.atlassian.plugins.rest</groupId>
            <artifactId>atlassian-rest-common</artifactId>
            <version>${jira.rest.version}</version>
            <scope>provided</scope>
            <exclusions>
                <exclusion>
                    <groupId>com.atlassian.plugins.rest</groupId>
                    <artifactId>com.atlassian.jersey-library</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>com.sun.jersey</groupId>
            <artifactId>jersey-core</artifactId>
            <version>1.8-atlassian-15</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>com.atlassian.plugins.rest</groupId>
            <artifactId>com.atlassian.jersey-library</artifactId>
            <version>${jira.rest.version}</version>
            <optional>true</optional>
            <scope>provided</scope>
            <type>pom</type>
        </dependency>

        <dependency>
            <groupId>com.atlassian.upgrade</groupId>
            <artifactId>upgrade-task-framework-api</artifactId>
            <version>2.0.0</version>
        </dependency>

        <dependency>
            <groupId>cloud.atlassian.provisioning</groupId>
            <artifactId>tenant-provisioning-api</artifactId>
            <scope>provided</scope>
        </dependency>

		<dependency>
            <groupId>org.jsoup</groupId>
            <artifactId>jsoup</artifactId>
            <version>1.3.3</version>
            <scope>package</scope>
        </dependency>

        <dependency>
            <groupId>org.codehaus.jackson</groupId>
            <artifactId>jackson-mapper-asl</artifactId>
            <version>1.4.4</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>cloud.atlassian.ninjas</groupId>
            <artifactId>tenant-leak-detector-aspect</artifactId>
            <version>${tenant-leak-detector.version}</version>
        </dependency>

        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <version>1.2.15</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>javax.ws.rs</groupId>
            <artifactId>jsr311-api</artifactId>
            <version>1.0</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
            <version>2.5</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>javax.xml.bind</groupId>
            <artifactId>jaxb-api</artifactId>
            <version>2.1</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>servlet-api</artifactId>
            <version>2.4</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.atlassian.sal</groupId>
            <artifactId>sal-api</artifactId>
            <version>${sal.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>commons-codec</groupId>
            <artifactId>commons-codec</artifactId>
            <version>1.4</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <!--This is for ther JSR annotations-->
            <groupId>com.google.code.findbugs</groupId>
            <artifactId>jsr305</artifactId>
            <version>1.3.9</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.atlassian.beehive</groupId>
            <artifactId>beehive-api</artifactId>
            <version>${beehive.version}</version>
        </dependency>

        <!-- Pocketknife -->
        <dependency>
            <groupId>cloud.atlassian.pocketknife</groupId>
            <artifactId>jira-pocketknife-enablement</artifactId>
        </dependency>
        <dependency>
            <groupId>cloud.atlassian.pocketknife</groupId>
            <artifactId>jira-pocketknife-rest</artifactId>
        </dependency>
        <dependency>
            <groupId>com.atlassian.pocketknife</groupId>
            <artifactId>atlassian-pocketknife-dynamic-modules</artifactId>
            <version>${pocketknife.dynamic-modules.version}</version>
        </dependency>
        <dependency>
            <groupId>javax.validation</groupId>
            <artifactId>validation-api</artifactId>
        </dependency>
        <!-- test deps -->
        <dependency>
            <groupId>com.atlassian.jira</groupId>
            <artifactId>jira-tests</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>junit-addons</groupId>
            <artifactId>junit-addons</artifactId>
            <version>1.4</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-all</artifactId>
            <version>1.8.4</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <version>2.5</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-all</artifactId>
            <version>1.1</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>cloud.atlassian.pocketknife</groupId>
            <artifactId>jira-pocketknife-vertigo-annotations</artifactId>
        </dependency>
        <dependency>
            <groupId>com.atlassian.workcontext</groupId>
            <artifactId>atlassian-work-context-doorway</artifactId>
            <scope>provided</scope>
            <version>${work.context.version}</version>
        </dependency>
    </dependencies>
    <profiles>
        <profile>
            <id>third-party-licensing</id>
            <build>
                <plugins>
                    <plugin>
                      <groupId>org.codehaus.mojo</groupId>
                      <artifactId>build-helper-maven-plugin</artifactId>
                      <version>1.8</version>
                      <executions>
                        <execution>
                          <id>attach-artifacts</id>
                          <phase>package</phase>
                          <goals>
                            <goal>attach-artifact</goal>
                          </goals>
                          <configuration>
                            <artifacts>
                              <artifact>
                                <file>../third-party-licensing/bom.csv</file>
                                <type>csv</type>
                                <classifier>bom</classifier>
                              </artifact>
                            </artifacts>
                          </configuration>
                        </execution>
                      </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-resources-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>copy-bill-of-materials</id>
                                <phase>prepare-package</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${project.build.outputDirectory}/</outputDirectory>
                                    <overwrite>true</overwrite>
                                    <resources>
                                        <resource>
                                            <directory>../third-party-licensing</directory>
                                            <includes>
                                                <include>bom.csv</include>
                                            </includes>
                                        </resource>
                                    </resources>
                                </configuration>
                            </execution>
                            <execution>
                                <id>copy-licenses</id>
                                <phase>prepare-package</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${project.build.outputDirectory}/licenses</outputDirectory>
                                    <overwrite>true</overwrite>
                                    <resources>
                                       <resource>
                                           <directory>../third-party-licensing/licenses</directory>
                                           <includes>
                                              <include>*.txt</include>
                                           </includes>
                                       </resource>
                                    </resources>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>waffle</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>aspectj-maven-plugin</artifactId>
                        <version>1.9</version>
                        <configuration>
                            <aspectLibraries>
                                <aspectLibrary>
                                    <groupId>cloud.atlassian.ninjas</groupId>
                                    <artifactId>tenant-leak-detector-aspect</artifactId>
                                </aspectLibrary>
                            </aspectLibraries>
                            <complianceLevel>1.8</complianceLevel>
                            <verbose>true</verbose>
                            <showWeaveInfo>true</showWeaveInfo>
                        </configuration>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>compile</goal>
                                </goals>
                            </execution>
                        </executions>
                        <dependencies>
                            <dependency>
                                <groupId>org.aspectj</groupId>
                                <artifactId>aspectjrt</artifactId>
                                <version>${aspectj.version}</version>
                                <scope>compile</scope>
                            </dependency>
                            <dependency>
                                <groupId>org.aspectj</groupId>
                                <artifactId>aspectjtools</artifactId>
                                <version>${aspectj.version}</version>
                                <scope>compile</scope>
                            </dependency>
                            <dependency>
                                <groupId>org.aspectj</groupId>
                                <artifactId>aspectjweaver</artifactId>
                                <version>${aspectj.version}</version>
                                <scope>compile</scope>
                            </dependency>
                        </dependencies>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

</project>
